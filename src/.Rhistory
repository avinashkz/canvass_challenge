return(ret_data)
}
#Update the target variable for all the generator units!
updated_data <- select(clf_data, unit_number)[[1]] %>% unique() %>% map_dfr(.f = process_data)
#Checking if the number of rows have reduced
nrow(clf_data)
nrow(updated_data)
updated_data %>% group_by(status) %>% summarise(count = n())
updated_data %>% group_by(unit_number, status) %>% summarise(count = n())
write_csv(updated_data, "../results/processed_data/predictive_maintenance_dataset_40days.csv")
write_csv(updated_data, "../results/processed_data/predictive_maintenance_dataset_processed.csv")
#Checking if the output is in the required format
updated_data %>%
filter(unit_number == 540) %>%
arrange(time_stamp)
clf_data %>% filter(unit_number == 540) %>%
arrange(time_stamp) %>%
mutate(new_status = lead(status,40)) %>%
filter(!is.na(new_status))
#Checking if the output is in the required format
updated_data %>%
filter(unit_number == 540) %>%
arrange(time_stamp)
clf_data %>% filter(unit_number == 540) %>%
arrange(time_stamp) %>%
mutate(new_status = lead(status,40)) %>%
mutate(new_status = ifelse(is.na(new_status), 1, new_status)) %>%
select(-c(status)) %>%
rename(status = new_status)
updated_data
updated_data %>% is.na()
updated_data %>% is.na() %>% group_by(status) %>% summarise_all()
updated_data %>% is.na() %>% group_by(status) %>% summarise_each(funs = sum())
updated_data %>% is.na() %>% group_by(status) %>% summarise_each(funs = sum)
updated_data %>% is.na() %>% group_by(status) %>% summarise_each(sum)
updated_data %>% is.na() %>% group_by(status) %>% summarise()
updated_data %>% is.na() %>% group_by(status)
updated_data %>% is.na()
updated_data %>% is.na() %>% as.tibble() %>% group_by(status)
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise()
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise_each(sum())
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise_each(funs = sum())
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise_each(funs = sum)
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise_all(funs = sum)
updated_data %>% is.na() %>% as.tibble() %>% group_by(status)
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise(unit_number = sum(unit_number))
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise(unit_number = sum(operational_setting_3))
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise(sum(.))
updated_data %>% is.na() %>% as.tibble() %>% sum()
updated_data %>% is.na() %>% sum()
updated_data %>% is.na() %>% as.tibble() %>% group_by(status)
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise(counT = sum(operational_setting_3))
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise(count = sum(operational_setting_3))
updated_data %>% is.na() %>% as.tibble() %>% group_by(status, operational_setting_3) %>% summarise(count = sum(operational_setting_3))
updated_data %>% is.na() %>% as.tibble() %>% group_by(operational_setting_3) %>% summarise(count = sum(operational_setting_3))
updated_data %>% is.na() %>% as.tibble() %>% group_by(operational_setting_3) %>% summarise(count = sum(operational_setting_3))
updated_data %>% is.na() %>% as.tibble() %>% group_by(status) %>% summarise(count = sum(operational_setting_3))
updated_data
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3)))
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(.)))
updated_data %>% group_by(status) %>% summarise_all(count = sum(is.na(.)))
updated_data %>% group_by(status) %>% summarise_each(count = sum(is.na(.)))
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3)))
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3))) %>% rename(count = 'test')
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3))) %>% rename('test' = count)
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3))) %>% rename('hello' = count)
val = "hello"
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3))) %>% rename(val = count)
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3)))
dat <- updated_data %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3)))
dat[,2]
names(dat)
names(dat)[2] <- val
names(dat)
map_isna <- function(column) {
ret_data <- updated_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_dat)[2] <- column
return(ret_data)
}
map_isna("operational_setting_3")
map_isna("operational_setting_3")
column <- "operational_setting_3"
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
updated_data
updated_data %>% is.na()
updated_data %>% is.na() %>% plot()
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
updated_data %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3)))
updated_data
updated_data %>% select(c(5,27))
updated_data %>% select(c(5,27)) %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3)))
updated_data %>% select(c(5,27)) %>% group_by(status) %>% summarise(count = sum(is.na(1)))
updated_data %>% select(c(5,27)) %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3)))
updated_data %>% select(c(5,27)) %>% group_by(status) %>% summarise(count = sum(is.na()))
updated_data %>% select(c(5,27)) %>% group_by(status) %>% summarise(count = sum(is.na(.)))
updated_data %>% select(c(5,27)) %>% group_by(status) %>% summarise(count = sum(is.na(operational_setting_3)))
ret_dat <- updated_data %>% select(c(5,27))
actual_name <- names(ret_dat)[1]
actual_name
names(ret_dat)[1] <- "column"
names(ret_dat)
ret_dat %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_dat)[1] <- actual_name
ret_dat
actual_name
names(ret_dat)[1]
ret_dat %>% group_by(status) %>% summarise(count = sum(is.na(column)))
ret_dat <- ret_dat %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_dat)[1] <- actual_name
ret_dat
ret_dat <- updated_data %>% select(c(5,27))
actual_name <- names(ret_dat)[1]
names(ret_dat)[1] <- "column"
ret_dat <- ret_dat %>% group_by(status) %>% summarise(count = sum(is.na(column)))
ret_dat
names(ret_dat)[1] <- actual_name
ret_dat
map_isna <- function(column) {
ret_dat <- updated_data %>% select(c(5,27))
actual_name <- names(ret_dat)[1]
names(ret_dat)[1] <- "column"
ret_dat <- ret_dat %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_dat)[1] <- actual_name
return(ret_data)
}
map_isna("operational_setting_3")
map_isna <- function(column) {
ret_dat <- updated_data %>% select(c(column,27))
actual_name <- names(ret_dat)[1]
names(ret_dat)[1] <- "column"
ret_dat <- ret_dat %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_dat)[1] <- actual_name
return(ret_data)
}
map_isna(5)
column <- 5
updated_data %>% select(c(column,27))
updated_data
column
updated_data %>% select(c(column,27))
ret_dat <- updated_data %>% select(c(column,27))
actual_name <- names(ret_dat)[1]
names(ret_dat)[1] <- "column"
ret_dat <- ret_dat %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_dat)[1] <- actual_name
return(ret_data)
map_isna <- function(column) {
ret_dat <- updated_data %>% select(c(column,27))
actual_name <- names(ret_dat)[1]
names(ret_dat)[1] <- "column"
ret_dat <- ret_dat %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_dat)[1] <- actual_name
return(ret_data)
}
map_isna(5)
map_isna <- function(column) {
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_daat <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_data)[1] <- actual_name
return(ret_data)
}
map_isna(5)
map_isna <- function(column) {
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_data <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_data)[1] <- actual_name
return(ret_data)
}
map_isna(5)
1:ncol(updated_data) %>% map_dfc(map_isna())
1:ncol(updated_data)
1:(ncol(updated_data)-1)
1:(ncol(updated_data)-1) %>% map_dfc(map_isna)
1:(ncol(updated_data)-1) %>% map_dfr(map_isna)
map_isna <- function(column) {
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_data <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_data)[1] <- actual_name
return(ret_data)
}
1:(ncol(updated_data)-1) %>% map_dfr(map_isna)
1 %>% map_isna()
map_isna <- function(column) {
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_data <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_data)[1] <- actual_name
return(ret_data)
}
1 %>% map_isna()
1 %>% map_isna(2)
map_isna(2)
map_isna(1)
ret_data <- updated_data %>% select(c(1,27))
ret_data
ret_data <- updated_data %>% select(c(5,27))
map_isna(5)
1:(ncol(updated_data)-1) %>% map_dfc(map_isna)
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_data <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
ret_data
map_isna <- function(column) {
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_data <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_data)[2] <- actual_name
return(ret_data)
}
1:(ncol(updated_data)-1) %>% map_dfc(map_isna)
map_isna(5)
map_isna(5) %>% ggplot() + geom_column(aes(status, operational_setting_3))
map_isna(5) %>% ggplot() + geom_col(aes(status, operational_setting_3))
map_isna(5)
map_isna(5) %>% ggplot() + geom_col(aes(status, operational_setting_3), position = "stack")
?geom_col
map_isna(5) %>% ggplot() + geom_histogram(aes(status, operational_setting_3), position = "stack")
map_isna(5) %>% ggplot() + geom_histogram(aes(operational_setting_3), position = "stack")
map_isna(5) %>% ggplot() + geom_col(aes(status, operational_setting_3), position = "stack")
updated_data
?gather
updated_data %>% gather("attribute", "values")
updated_data %>% is.na()
updated_data %>% is.na() %>% ggplot() + geom_histogram(aes(unit_number))
updated_data %>% is.na() %>% as.tibble() %>% ggplot() + geom_histogram(aes(unit_number))
updated_data %>% is.na() %>% as.tibble() %>% ggplot() + geom_histogram(aes(unit_number), stat = "count")
map_isna(5)
map_isna(5) %>% ggplot() + geom_col(aes(status, operational_setting_3))
map_isna <- function(column) {
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_data <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_data)[2] <- actual_name
ret_dat["column"] <- actual_name
return(ret_data)
}
map_isna(5)
map_isna <- function(column) {
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_data <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_data)[2] <- actual_name
ret_dat["column"] <- actual_name
return(ret_data)
}
map_isna <- function(column) {
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_data <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
names(ret_data)[2] <- actual_name
ret_data["column"] <- actual_name
return(ret_data)
}
map_isna(5)
map_isna <- function(column) {
ret_data <- updated_data %>% select(c(column,27))
actual_name <- names(ret_data)[1]
names(ret_data)[1] <- "column"
ret_data <- ret_data %>% group_by(status) %>% summarise(count = sum(is.na(column)))
ret_data["column"] <- actual_name
return(ret_data)
}
map_isna(5)
map_isna(5) %>% ggplot() + geom_col(aes(column, count, color = status))
map_isna(5) %>% ggplot() + geom_col(aes(column, count, fill() = status))
map_isna(5) %>% ggplot() + geom_col(aes(column, count, fill = status))
map_isna(5) %>% ggplot() + geom_col(aes(column, count, fill = as.factor(status)))
1:(ncol(updated_data)-1) %>% map_dfc(map_isna)
1:(ncol(updated_data)-1) %>% map_dfr(map_isna)
1:(ncol(updated_data)-1) %>% map_dfr(map_isna) %>% ggplot() + geom_col(aes(column, count, fill = as.factor(status)))
1:(ncol(updated_data)-1) %>% map_dfr(map_isna) %>% ggplot() + geom_col(aes(column, count, fill = as.factor(status))) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
updated_data[,5]
updated_data[,4]
updated_data[,4] %>% density()
updated_data[[,4]] %>% density()
density()
density(updated_data[[,4]])
updated_data[[,4]]
updated_data[,4]
density(updated_data[,4] %>% c())
updated_data[,4] %>% c()
updated_data[,4]
updated_data[,4]
updated_data[,4]
updated_data[,4] %>% as.array()
updated_data[,4]
updated_data[,4] %>% unlist()
updated_data[,4]
updated_data[,4] %>% as.vector()
updated_data[,4] %>% as.vector()
updated_data[[,4]]
updated_data[['operational_setting_2']]
updated_data[['operational_setting_2']] %>% density()
updated_data[['operational_setting_2']] %>% density(, na.rm = TRUE)
updated_data[['operational_setting_2']] %>% density(, na.rm = TRUE)
updated_data[['operational_setting_2']] %>% plot(, na.rm = TRUE)
updated_data[['operational_setting_2']] %>% density(, na.rm = TRUE) %>% plot()
updated_data
updated_data %>% ggplot() + geom_point(aes(operational_setting_1, operational_setting_2))
updated_data
updated_data %>% ggplot() + geom_point(aes(sensor_measurement_1, sensor_measurement_2))
updated_data %>% ggplot() + geom_point(aes(sensor_measurement_1, sensor_measurement_2, color = status))
updated_data[['operational_setting_2']] %>% density(, na.rm = TRUE) %>% plot()
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data
library(lubridate)
reg_data %>% mutate(time_stamp = ymd(date) + hms(time))
reg_data %>% mutate(time_stamp = paste(ymd(date), hms(time)))
reg_data %>% mutate(time_stamp = paste(dmy(date), hms(time)))
as.POSIXct(paste(reg_data$date, reg_data$time), format="%Y-%m-%d %H:%M:%S")
as.POSIXct(paste(reg_data$date, reg_data$time), format="%d-%m-%Y %H:%M:%S")
paste(reg_data$date, reg_data$time)
as.POSIXct(paste(reg_data$date, reg_data$time), format="%d/%m/%Y %H:%M:%S")
reg_data %>% mutate(time_stamp = paste(dmy(date), hms(time)))
as.POSIXct(paste(reg_data$date, reg_data$time), format="%m/%d/%Y %H:%M:%S")
reg_data$time_stamp <- as.POSIXct(paste(reg_data$date, reg_data$time), format="%m/%d/%Y %H:%M:%S")
reg_data
reg_data %>% select(-c(date, time))
reg_data %>% select(-c(date, time)) %>% select(c(15,1:4))
reg_data %>% select(-c(date, time)) %>% select(c(15,1:14))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14))
reg_data
write_csv("../results/processed_data/forecasting_processed.csv")
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
reg_data
reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp)
reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp)
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data$time_stamp <- as.POSIXct(paste(reg_data$date, reg_data$time), format="%m/%d/%Y %H:%M:%S")
reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp)
reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y))
reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp)
reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 6))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 6))
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
reg_data %>% tail()
reg_data %>% tail(10)
reg_data %>% filter(!is.null(y))
reg_data %>% filter(!is.null(y)) %>% tail
reg_data %>% filter(!is.null(y))
reg_data %>% filter(is.null(y))
reg_data %>% filter(is.null(y))
reg_data %>% filter(is.na(y))
reg_data %>% filter(is.na(y))
reg_data %>% filter(!is.na(y))
reg_data %>% filter(is.na(y))
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data$time_stamp <- as.POSIXct(paste(reg_data$date, reg_data$time), format="%m/%d/%Y %H:%M:%S")
reg_data
reg_data$time_stamp <- as.POSIXct(paste(reg_data$date, reg_data$time), format="%m/%d/%Y %H:%M:%S")
reg_data %>% arrange(time_stamp) %>% filter(!is.na(y))
reg_data %>% arrange(time_stamp) %>% filter(is.na(y))
reg_data %>% arrange(time_stamp) %>% filter(is.na(y))
reg_data %>% arrange(time_stamp) %>% filter(!is.na(y))
reg_data %>% arrange(time_stamp) %>% tail()
reg_data %>% arrange(time_stamp)
reg_data %>% arrange(time_stamp) %>% tail(1) %>% filter(!is.na(y))
reg_data$time_stamp <- as.POSIXct(paste(reg_data$date, reg_data$time), format="%m/%d/%Y %H:%M:%S")
reg_data %>% arrange(time_stamp) %>% tail(1) %>% filter(!is.na(y))
ms_val <- reg_data %>% arrange(time_stamp) %>% tail(1) %>% filter(!is.na(y))
ms_val
ms_val$date
ms_val$time
as.POSIXct(paste(ms_val$date, ms_val$time), format="%m/%d/%Y %H:%M:%S")
ms_val$date
ms_val$time
as.POSIXct(paste(ms_val$date, hms(ms_val$time)), format="%m/%d/%Y %H:%M:%S")
as.POSIXct(paste(mdy(ms_val$date), hms(ms_val$time)), format="%m/%d/%Y %H:%M:%S")
mdy(ms_val$date)
as.POSIXct(paste(mdy(ms_val$date), hms(ms_val$time)), format="%m-%d-%Y %H:%M:%S")
as.POSIXct(paste(mdy(ms_val$date), ms_val$time), format="%m-%d-%Y %H:%M:%S")
reg_data
reg_data %>% mutate(date = mdy(date))
reg_data %>% mutate(date = mdy(date)) %>% filter(is.na(date))#mutate(time_stamp)
reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%m/%d/%Y %H:%M:%S")) #filter(is.na(date))
reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%m-%d-%Y %H:%M:%S")) #filter(is.na(date))
reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")) #filter(is.na(date))
reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")) %>% arrange(time_stamp)#filter(is.na(date))
reg_data <- reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")) %>% arrange(time_stamp)
reg_data %>%filter(is.na(time_stamp))
reg_data %>% filter(is.na(time_stamp)) %>% mutate(time_stamp = as.POSIXct(paste("2004-04-04", "02:00:00"), format="%Y-%m-%d %H:%M:%S"))
reg_data %>% filter(is.na(time_stamp)) %>% mutate(time_stamp = as.POSIXct(paste(2004-04-04, 02:00:00), format="%Y-%m-%d %H:%M:%S"))
reg_data %>% filter(is.na(time_stamp)) %>% mutate(time_stamp = as.POSIXct(paste("2004-04-04", "02:00:00"), format="%Y-%m-%d %H:%M:%S"))
reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")) %>% arrange(time_stamp)
reg_data %>% filter(is.na(time_stamp)) %>% mutate(time_stamp = as.POSIXct(paste("2004-04-04", "02:00:00"), format="%Y-%m-%d %H:%M:%S"))
reg_data
reg_data %>% filter(is.na(time_stamp)) %>% mutate(time_stamp = as.POSIXct("2004-04-04 03:00:00", format="%Y-%m-%d %H:%M:%S"))
reg_data %>% filter(is.na(time_stamp)) %>% mutate(time_stamp = as.POSIXct("2004-04-04 02:00:00", format="%Y-%m-%d %H:%M:%S"))
reg_data %>% filter(is.na(time_stamp)) %>% mutate(time_stamp = as.POSIXct("2004-04-04 04:00:00", format="%Y-%m-%d %H:%M:%S"))
knitr::opts_chunk$set(echo = TRUE)
#Importing dependencies
library(tidyverse)
#Importing dependencies
library(tidyverse)
library(purrr)
library(lubridate)
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")) %>% arrange(time_stamp)
reg_data <- reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")) %>% arrange(time_stamp)
reg_data %>% filter(is.na(time_stamp))
seq.POSIXt("2004-04-04 04:00:00", format="%Y-%m-%d %H:%M:%S")
seq.POSIXt("2004-04-04 04:00:00", format="%Y-%m-%d %H:%M:%S")
seq.POSIXt("2004-04-04 04:00:00", format="%Y-%m-%d %H:%M:%S")
as.POSIXt("2004-04-04 04:00:00", format="%Y-%m-%d %H:%M:%S")
as.POSIXct("2004-04-04 04:00:00", format="%Y-%m-%d %H:%M:%S")
as.POSIXct("2004-04-04 02:00:00", format="%Y-%m-%d %H:%M:%S")
?as.POSIXct
as.POSIXct("2004-04-04 02:00:00", format="%Y-%m-%d %H:%M:%S", tz="America/New_York")
as.POSIXct("2004-04-04 02:00:00", format="%Y-%m-%d %H:%M:%S", tz="Asia")
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S", tz="Asia/Calcutta")) %>% arrange(time_stamp)
reg_data <- reg_data %>% mutate(date = mdy(date)) %>% mutate(time_stamp = as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S", tz="Asia/Calcutta")) %>% arrange(time_stamp)
reg_data %>% filter(is.na(time_stamp))
reg_data
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data <- reg_data %>%
mutate(date = mdy(date)) %>%
mutate(time_stamp = as.POSIXct(paste(date, time),
format="%Y-%m-%d %H:%M:%S",
tz="Asia/Calcutta"))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 6))
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
reg_data %>% filter(!is.na(time_stamp))
reg_data %>% filter(is.na(time_stamp))
reg_data
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data <- reg_data %>%
mutate(date = mdy(date)) %>%
mutate(time_stamp = as.POSIXct(paste(date, time),
format="%Y-%m-%d %H:%M:%S",
tz="Asia/Calcutta"))
reg_data
reg_data %>% filter(is.na(time_stamp))
reg_data %>% filter(is.na(y))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 6))
reg_data %>% filter(is.na(y))
reg_data %>% filter(!is.na(y))
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data <- reg_data %>%
mutate(date = mdy(date)) %>%
mutate(time_stamp = as.POSIXct(paste(date, time),
format="%Y-%m-%d %H:%M:%S",
tz="Asia/Calcutta"))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 6))
reg_data <- reg_data %>% filter(!is.na(y))
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data <- reg_data %>%
mutate(date = mdy(date)) %>%
mutate(time_stamp = as.POSIXct(paste(date, time),
format="%Y-%m-%d %H:%M:%S",
tz="Asia/Calcutta"))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 1))
reg_data <- reg_data %>% filter(!is.na(y))
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data <- reg_data %>%
mutate(date = mdy(date)) %>%
mutate(time_stamp = as.POSIXct(paste(date, time),
format="%Y-%m-%d %H:%M:%S",
tz="Asia/Calcutta"))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) #%>% mutate(y = lead(y, 1))
reg_data <- reg_data %>% filter(!is.na(y))
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data <- reg_data %>%
mutate(date = mdy(date)) %>%
mutate(time_stamp = as.POSIXct(paste(date, time),
format="%Y-%m-%d %H:%M:%S",
tz="Asia/Calcutta"))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 3))
reg_data <- reg_data %>% filter(!is.na(y))
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data <- reg_data %>%
mutate(date = mdy(date)) %>%
mutate(time_stamp = as.POSIXct(paste(date, time),
format="%Y-%m-%d %H:%M:%S",
tz="Asia/Calcutta"))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 0))
reg_data <- reg_data %>% filter(!is.na(y))
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data <- reg_data %>%
mutate(date = mdy(date)) %>%
mutate(time_stamp = as.POSIXct(paste(date, time),
format="%Y-%m-%d %H:%M:%S",
tz="Asia/Calcutta"))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 1))
reg_data <- reg_data %>% filter(!is.na(y))
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
reg_data <- read_csv("../data/forecasting_dataset.csv")
reg_data <- reg_data %>%
mutate(date = mdy(date)) %>%
mutate(time_stamp = as.POSIXct(paste(date, time),
format="%Y-%m-%d %H:%M:%S",
tz="Asia/Calcutta"))
reg_data <- reg_data %>% select(-c(date, time)) %>% select(c(15,1:14)) %>% arrange(time_stamp) %>% mutate(y = lead(y, 6))
reg_data <- reg_data %>% filter(!is.na(y))
write_csv(reg_data, "../results/processed_data/forecasting_processed.csv")
